import pytest
from ingredient import Ingredient


class TestIngredient:
    @pytest.mark.parametrize('ingredient_type, name, price',(
        [
            ['Соусы','Соус Spicy-X', 90],
            ['Соусы','Соус фирменный Space Sauce', 80],
            ['Соусы','Соус традиционный галактический', 15],
            ['Соусы','Соус с шипами Антарианского плоскоходца', 88],
            ['Начинки', 'Мясо бессмертных моллюсков Protostomia', 1337],
            ['Начинки', 'Говяжий метеорит (отбивная)', 3000],
            ['Начинки', 'Биокотлета из марсианской Магнолии', 424],
            ['Начинки', 'Филе Люминесцентного тетраодонтимформа', 988],
            ['Начинки', 'Хрустящие минеральные кольца', 300],
            ['Начинки', 'Плоды Фалленианского дерева', 874],
            ['Начинки', 'Кристаллы марсианских альфа-сахаридов', 762],
            ['Начинки', 'Мини-салат Экзо-Плантаго', 4400],
            ['Начинки', 'Сыр с астероидной плесенью', 4142]
            ]
    ))
    def test_check_price_ingredient(self,ingredient_type,name,price):
        price_ingredient = Ingredient(ingredient_type, name, price)
        assert price_ingredient.get_price() == price


    @pytest.mark.parametrize('ingredient_type, name, price', (
            [
                ['Соусы', 'Соус Spicy-X', 90],
                ['Соусы', 'Соус фирменный Space Sauce', 80],
                ['Соусы', 'Соус традиционный галактический', 15],
                ['Соусы', 'Соус с шипами Антарианского плоскоходца', 88],
                ['Начинки', 'Мясо бессмертных моллюсков Protostomia', 1337],
                ['Начинки', 'Говяжий метеорит (отбивная)', 3000],
                ['Начинки', 'Биокотлета из марсианской Магнолии', 424],
                ['Начинки', 'Филе Люминесцентного тетраодонтимформа', 988],
                ['Начинки', 'Хрустящие минеральные кольца', 300],
                ['Начинки', 'Плоды Фалленианского дерева', 874],
                ['Начинки', 'Кристаллы марсианских альфа-сахаридов', 762],
                ['Начинки', 'Мини-салат Экзо-Плантаго', 4400],
                ['Начинки', 'Сыр с астероидной плесенью', 4142]
            ]
    ))
    def test_check_name_ingredient(self,ingredient_type, name, price):
        name_ingredient = Ingredient(ingredient_type, name, price)
        assert name_ingredient.get_name() == name


    @pytest.mark.parametrize('ingredient_type, name, price', (
            [
                ['Соусы', 'Соус Spicy-X', 90],
                ['Соусы', 'Соус фирменный Space Sauce', 80],
                ['Соусы', 'Соус традиционный галактический', 15],
                ['Соусы', 'Соус с шипами Антарианского плоскоходца', 88],
                ['Начинки', 'Мясо бессмертных моллюсков Protostomia', 1337],
                ['Начинки', 'Говяжий метеорит (отбивная)', 3000],
                ['Начинки', 'Биокотлета из марсианской Магнолии', 424],
                ['Начинки', 'Филе Люминесцентного тетраодонтимформа', 988],
                ['Начинки', 'Хрустящие минеральные кольца', 300],
                ['Начинки', 'Плоды Фалленианского дерева', 874],
                ['Начинки', 'Кристаллы марсианских альфа-сахаридов', 762],
                ['Начинки', 'Мини-салат Экзо-Плантаго', 4400],
                ['Начинки', 'Сыр с астероидной плесенью', 4142]
            ]
    ))
    def test_check_type_ingredient(self, ingredient_type, name, price):
        type_ingredient = Ingredient(ingredient_type, name, price)
        assert type_ingredient.get_type() == ingredient_type